1、Mysql的事物隔离级别？
答：
Mysql的事物隔离级别 其实跟 Spring的事物隔离级别一样，都是
1、Read Uncommitted（读取未提交内容）
2、Read Committed（读取提交内容）
3、Repeatable Read（可重读）
4、Serializable（可串行化）    具体参照：mysql事物隔离级别

2、分库分表理解？（网址1：https://segmentfault.com/a/1190000004716061）
答：
1）、分库是指按照业务模块将数据分散到不同的数据库服务器。
eg：用户数据、商品数据、订单数据分别放到不同的三台服务器
2）、分库出现的问题
1、join操作问题：分散到多个数据库的数据无法通过join进行处理，只能通过多次查询
2、事务问题：如果一个数据库可以进行一个事务操作，分库之后就无法使用数据库事务，需要业务
程序实现事务功能
3、成本问题：分库之后需要对数据进行备份

总结：业务分库之后需要根据不同数据读写不同的数据库，代码中需要增加根据数据类型，映射到不同数据库的逻辑，增加了工作量

3）、分表：（表数据量太大，无法满足性能要求）
1、两种方式：垂直拆分和水平拆分
垂直拆分：就像切蛋糕一样，高度相同，面积相同或不同，对字段进行拆分，然后根据关键字段关联
优点：垂直拆分就是表中某些不常用且占了大量空间的列拆分出去，提示查询效率
缺点：原来只要查询一次，现在要查询两次

水平拆分：就像切蛋糕一样，面积相同，高度相同或不同，字段名都一样，行数id不一样，一般超过1000
万就要进行分表

路由算法：某条数据需要增加路由算法进行计算，然后计算出属于哪个子表
1、范围路由：选取有序的数据列作为路由条件，按1-99999放1表，100000-999999放2表等等
优点：可以扩充新的表，不需要动原有的数据
缺点：分布不均匀
2、Hash路由算法：
优点：表数据分布均匀
缺点：扩充新的表很麻烦，需要对所有数据重分布
3、配置路由：配置路由就是路由表，用一张独立的表来记录路由信息，新增一张路由表，包含
user_id和table_id两列，根据user_id就可以查询对应的table_id
优点：使用灵活，扩充表的时候，只需要迁移指定的数据，然后修改路由表就可以了
缺点：必须多查询一次，会影响整体性能，如果路由表数据量太大，也会影响性能

join操作
水平分表后，数据散列在多个表中，如果需要与其他表进行join，需要在业务代码或者数据库中间件中
进行多次join查询，然后将结果合并

count操作
1、需要在业务代码或者数据库中间件中进行多次count查询，然后将结果相加，性能比较低
2、记录数表：具体做法就是插入一张记录数表，包含table_name,row_count两个字段，每次插入或者
删除子表数据成功后，都要做相应的更新
优点：性能大大提高
缺点：复杂度增加，对子表的操作都要做相应的更新，不能有业务逻辑上的遗漏

order by操作
水平拆分后，排序无法在数据库完成，只能由业务代码或者数据库中间件分别查询子表数据后汇总进行排序

3、手写代码题（包含sql题）
答：
1）、假设商户表A（id , city ）  ,交易流水表B （aid, amount , time）   这里的time代表交易时间，  请用sql写出查询每个城市每个月的销售业绩（答案可在评论里回复）
select city,time,sum(amount) from A,B where A.id=B.aid group by city,YEAR(time),MONTH(time)
2）、假设有一个数组 A ，int[] A = { 1 , 3 , -1 ,0 , 2 , 1 , -4 , 2 , 0 ,1 ...  N};   原来是需要查出大于0的数组，但是由于传参错误或者其他原因，导致查出0和负数了，现在要求在不使用新数组和新集合的情况下（即只使用这个A数组，因数组数据比较大，且只能用一次循环） 实现正数放到数组的前面，小于等于0的数放到数组的末尾（答案可在评论里回复）

4、为什么要使用分区？如何分区？
