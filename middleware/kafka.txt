1、kafka的定义
答：kafka是一个分布式消息订阅系统，首先需要对kafka进行分区（partition），根据topic去消费对应的消息，
Producer，consumer实现Kafka注册（zookeeper）的接口，数据从producer发送到broker，broker承担一个中间缓存和分发的作用。broker分发注册到系统中的consumer,
Consumer从kafka集群pull数据，并控制获取消息的offset

2、kafka相对与传统的技术有什么优势
答：
1、处理数据快速、高吞吐量
2、可伸缩性强，因为数据进行了分区
3、数据持久性，在集群中进行复制，以防止数据丢失

3、kafka的作用？
答：
1、降低系统组网复杂度
2、kafka承担高速数据总线，各个接口类似插口插在插座上

4、kafka有什么特点？
答：
1、发布和订阅提供高吞吐量。kafka每秒可以生产25万消息
每秒可以消费55万消息
2、可以进行持久化操作，将消息持久化到磁盘,减少IO的操作
3、producer、broker和consumer均为分布式系统，无需停机即可扩展机器

5、解释如何提高远程用户的吞吐量?
答：
如果用户位于与broker不同的数据中心，则可能需要调优套接口缓冲区大小，以对长网络延迟进行摊销。

6、kafka分布式的情况下，如何保证消息的顺序？
答：消息producer在发送消息的时候，有可能存在对于broker连接存在多个为确认的消息
即A和B两个消息发送，但是A由于某种原因发送失败，B发送成功，而A又进行了重试机制，
导致A发送成功，从而变成了BA。
所以我们需要设置发送前的未知状态最大消息数量应该为1，这样就保证了发送前的每一条消息的状态是可知的

7、kafka节点之间如何复制备份的？
答：
1、一个备份数量为n的集群允许n-1个节点失败
2、kafka使用Zookeeper实现leader选举，Leader处理此分区的所有的读写请求，而follower被动的复制数据
3、ISR(in-sync replicas)的副本保持和leader的同步,当一个消息发送给leader的时候，
leader会等待ISR中所有的副本告诉它已经接收了这个消息，如果一个副本失败了，那么它会被移除ISR

8、kafka消息是否会丢失？为什么？
答：可以通过request.required.acks属性进行配置：
0代表：不进行消息接收是否成功的确认(默认值)--高吞吐量设置；
1代表：当Leader副本接收成功后，返回接收成功确认信息；
-1代表：当Leader和Follower副本都接收成功后，返回接收成功确认信息--不丢失数据策略；

9、kafka最合理的配置是什么？
答：
1、分区数，默认是1
2、一个socket 请求的最大字节数，最大1000000字节
3、处理IO的线程数，默认是8

10、Kafka的Leader的选举机制？
答：
1、当broker岩机，zookeeper会自动删除对应的节点，并读取最新的节点
2、

11、kafka对硬件的配置有什么要求？
12、kafka的消息保证有几种方式？

13、kafka的应用场景？
答：
1、kafka经常被使用来用户活动跟踪，如浏览网页、搜索、点击等活动
2、Kafka也经常用来记录运营监控数据，如报警、报告数据
3、保证两个系统之间的独立，不参数交集

